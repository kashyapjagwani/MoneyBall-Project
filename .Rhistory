source('~/.active-rstudio-document')
head(batting)
str(batting)
head(batting$AB,5)
head(batting$X2B)
#Create a new column called 'BA' which is calculated as H/AB
batting$BA <- batting$H / batting$AB
str(batting)
tail(batting$BA,5)
#Create a new column called 'OBP' which is calculated as
#(H+BB+HBP)/(AB+BB+HBP+SF)
batting$OBP <- (batting$H+batting$BB+batting$HBP)/(batting$AB+batting$BB+batting$HBP+batting$SF)
tail(batting$OBP,5)
#Create a new column called '1B' which is calculated as H-2B-3B-HR
batting$1B <- batting$H - batting$X2B - batting$X3B - batting$HR
#Create a new column called '1B' which is calculated as H-2B-3B-HR
batting$X1B <- batting$H - batting$X2B - batting$X3B - batting$HR
#Create a new column called 'SLG' which is calculated as
#((1B)+(2*2B)+(3*3B)+(4*HR))/AB
batting$SLG <- ((batting$X1B)+(2*batting$X2B)+(3*batting$X3B)+(4*batting$HR))/batting$AB
#Read the Salaries.csv file
salaries <- read.csv('Salaries.csv')
summary(batting)
bat2 <- subset(batting, batting$yearID > 1984)
summary(bat2)
#Now, since our batting data contains information from the year 1871, and our salaries data contains information from the year 1985, meaning we need to remove the batting data that occured before 1985
batting.post1985 <- subset(batting, batting$yearID > 1984)
View(bat2)
summary(salaries)
c2 <- merge(batting.post1985,salaries,by = c('playerID','yearID'))
summary(c2)
#Now merge the batting.post1985 & salaries data on columns 'playerID' & 'yearID'
combo <- merge(batting.post1985,salaries,by = c('playerID','yearID'))
c2 <- NULL
lost.players <- subset(combo, select = 'playerID')
lost.players
head(lost.players)
lost.players <- subset(combo, playerID %in% c('giambja01','damonjo01','saenzol01'))
head(lost.players)
#Now select the 3 lost players from the combo data
lost.players <- subset(combo, playerID %in% c('giambja01','damonjo01','saenzol01'))
#Now select the 3 lost players from the combo data
lost.players <- subset(combo, playerID %in% c('giambja01','damonjo01','saenzol01'),yearID == 2001)
head(lost.players)
#Now select the 3 lost players from the combo data
lost.players <- subset(combo, playerID %in% c('giambja01','damonjo01','saenzol01'),yearID == '2001')
#Now select the 3 lost players from the combo data
lost.players <- subset(combo, playerID %in% c('giambja01','damonjo01','saenzol01'))
lost.players <- subset(lost.players,yearID == 2001)
lost.players
lost.players <- subset(lost.players, select = c('playerID','H','X2B','X3B','HR','OBP','SLG','BA','AB'))
lost.players
combo2 <- subset(combo,yearID == 2001)
#Now we need to find 3 replacement players from the current squad, which can be replaced by the above 3 lost players
#We can make use of the 'combo' data frame to find 3 replacement players with yearID == 2001
available.players <- subset(combo, yearID==2001)
#Now we can use some visualization in order to better understand the data
library(ggplot2)
plt <- ggplot(available.players, aes(x='OBP',y='Salary'))
print(plt + geom_point())
head(available.players$salary)
plt <- ggplot(available.players, aes(x='OBP',y='salary'))
print(plt + geom_point())
plt <- ggplot(available.players, aes(x=OBP,y=salary))
print(plt + geom_point())
#As our constraints requires the combined salary of 3 replacement players to be <= $15M
#we can restrict our search to only those players whose salary is below $6.5M
available.players <- subset(available.players,salary<=6500000)
#The 2nd constraint require the replacment players to have combined AB >= AB of lost players
#The combined AB of lost players is 1469, that means each of the replacement players should have AB >= 490 (1469/3 ~= 490)
available.players <- subset(available.players,AB>=490)
#The 3rd constraint places restriction on the mean OBP
#The mean OBP of lost players is around 0.363, thus mean OBP of replacement players should have mean OBP >= 0.363
available.players <- subset(available.players, OBP>=0.363)
#Now we can sort the available players in the descending order of OBP to get the max mean
library(dplyr)
head(arrange(available.players,desc(OBP)))
head(arrange(available.players,desc(OBP)))
head(arrange(filter(available.players,playerID,OBP,AB,salary),desc(OBP)))
head(arrange(subset(available.players,select=c(available.players$playerID,available.players$OBP,available.players$AB,available.players$salary)),desc(OBP)))
head(arrange(subset(available.players,select=c('playerID','OBP','AB','salary')),desc(OBP)))
install.packages("caTools")
library(caTools)
df <- read.csv('C:/Users/kashy/Documents/R-Course-Notes/R-Course-HTML-Notes/R-for-Data-Science-and-Machine-Learning/Machine Learning with R/student-mat.csv')
head(df)
df <- read.csv('C:/Users/kashy/Documents/R-Course-Notes/R-Course-HTML-Notes/R-for-Data-Science-and-Machine-Learning/Machine Learning with R/student-mat.csv', sep = ';')
head(df)
sample <- sample.split(df$G3, SplitRatio = 0.8)
head(sample)
View(salaries)
test <- subset(df,sample)
head(test)
test <- subset(df,sample==TRUE)
train <- subset(df, sample==FALSE)
